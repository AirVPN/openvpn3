name: Build

on: [push, pull_request]

jobs:
  msvc:
    strategy:
      matrix:
        arch: [x86, amd64, amd64_arm64]

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      BUILD_CONFIGURATION: Release

    runs-on: windows-latest
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
    - uses: lukka/get-cmake@85652a37b177d946c9f4fad0f696b2927ee7754d # v3.29.4
    - uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0
      with:
        arch: ${{ matrix.arch }}

    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
      with:
        vcpkgGitCommitId: e3ad383ceb886677eb181e16adeeb4d4a2c2d4c4
        vcpkgJsonGlob: '**/windows/vcpkg.json'

    - name: Run CMake with vcpkg.json manifest
      uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
      if: ${{ matrix.arch != 'amd64_arm64' }}
      with:
        configurePreset: win-${{ matrix.arch }}-release
        buildPreset: win-${{ matrix.arch }}-release
        testPreset: win-${{ matrix.arch }}-release

    - name: Run CMake with vcpkg.json manifest (NO TESTS)
      uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
      if: ${{ matrix.arch == 'amd64_arm64' }}
      with:
        configurePreset: win-${{ matrix.arch }}-release
        buildPreset: win-${{ matrix.arch }}-release

    - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
      with:
        name: openvpn3-msvc-${{ matrix.arch }}
        path: |
            ${{ github.workspace }}/build/**/*.exe
            ${{ github.workspace }}/build/**/*.dll
            !${{ github.workspace }}/build/**/test/ssl/**
            !${{ github.workspace }}/build/**/test/unittests/**
            !${{ github.workspace }}/build/**/CMakeFiles/**
            !${{ github.workspace }}/build/**/vcpkg_installed/**
  mingw:
    strategy:
      matrix:
        arch: [x86, x64]

    env:
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
    - uses: lukka/get-cmake@85652a37b177d946c9f4fad0f696b2927ee7754d # v3.29.4

    - name: Install dependencies
      run: sudo apt update && sudo apt install -y mingw-w64 unzip cmake build-essential

    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@5e0cab206a5ea620130caf672fce3e4a6b5666a1 # v11.5
      with:
        vcpkgGitCommitId: e3ad383ceb886677eb181e16adeeb4d4a2c2d4c4
        vcpkgJsonGlob: '**/mingw/vcpkg.json'

    - name: Run CMake with vcpkg.json manifest
      uses: lukka/run-cmake@2ce8982be71b8e9a3c4d5e432135035afd1e76a7 # v10.7
      with:
        configurePreset: mingw-${{ matrix.arch }}-release
        buildPreset: mingw-${{ matrix.arch }}-release

    - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
      with:
        name: openvpn3-mingw-${{ matrix.arch }}
        path: |
            ${{ github.workspace }}/build/**/*.exe
            ${{ github.workspace }}/build/**/*.dll
            !${{ github.workspace }}/build/**/test/ssl/**
            !${{ github.workspace }}/build/**/test/unittests/**
            !${{ github.workspace }}/build/**/CMakeFiles/**
            !${{ github.workspace }}/build/**/vcpkg_installed/**
